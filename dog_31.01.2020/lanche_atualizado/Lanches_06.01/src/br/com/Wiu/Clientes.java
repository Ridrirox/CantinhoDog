/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Clientes.java
 *
 * Created on 10/08/2013, 10:33:34
 */
package br.com.Wiu;

import br.com.Controle.CliBean;
import br.com.Controle.CliControl;
import br.com.Controle.Contato;
import br.com.Controle.ContatoController;
import br.com.Util.TeclasPermitidas;
import br.com.Util.TeclasPermitidasnome;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ROX
 */
public class Clientes extends javax.swing.JFrame {
    private String tipoCadastro;
    private final List<CliBean> cliente;
    private final List<CliBean> entrega;
    private List<CliBean> produtos;
    private List<CliBean> pedido;
    //private List<CliBean> cliente;
    DefaultTableModel tmServidores = new DefaultTableModel(null, new String[]{".","Nome", "Telefone", "Endereço", "Data","....."});
    ListSelectionModel lsmServidores;

    /** Creates new form Clientes */
    public Clientes() {
        initComponents();
        setBounds(230, 150, 890, 600);
        cliente = new CliControl().listarCliente("%%");
        entrega = new CliControl().listarEntrega("%%");
        AtualizaClientes();
        ControleDigitacao();
        //--AtualizaPedidos();
        txtPesquisa.setText("");
        //btnSalvar.setEnabled(false);
        Rezise();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btPesquisa = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtFavorito = new javax.swing.JTextField();
        txtData = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIdprodutos = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbServidoresVeiculos = new javax.swing.JTable();
        contaveiculos = new javax.swing.JLabel();
        contacli = new javax.swing.JLabel();
        txtPedidos = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        lbData = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEntrega = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        cbPedidos = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Pesquisar");

        jId.setEditable(false);
        jId.setToolTipText("Id Tabela Cliente");
        jId.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("Clientes");

        txtPesquisa.setToolTipText("Pesquisa pelo Telefone");

        btPesquisa.setText(".....");
        btPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome");

        jLabel3.setText("Telefone");

        jLabel4.setText("Endereço");

        jLabel5.setText("Favorito");

        txtNome.setEditable(false);
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });

        txtTelefone.setEditable(false);

        txtEndereco.setEditable(false);
        txtEndereco.setToolTipText("Ex: Rua Videira, 576");

        txtFavorito.setBackground(new java.awt.Color(255, 255, 153));
        txtFavorito.setForeground(new java.awt.Color(0, 0, 204));
        txtFavorito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFavoritoActionPerformed(evt);
            }
        });

        txtData.setEditable(false);

        jLabel8.setText("Cliente desde:");

        jLabel9.setText("Pedidos");

        txtIdprodutos.setEditable(false);
        txtIdprodutos.setToolTipText("Clientes id, Fk tabela Cliente");
        txtIdprodutos.setEnabled(false);

        tbServidoresVeiculos.setModel(tmServidores);
        tbServidoresVeiculos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmServidores = tbServidoresVeiculos.getSelectionModel();
        lsmServidores.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (! e.getValueIsAdjusting()){
                    tbClientesLinhaSelecionada(tbServidoresVeiculos);
                }
            }
        });
        jScrollPane2.setViewportView(tbServidoresVeiculos);

        contaveiculos.setText("Tabela Veiculos");

        contacli.setFont(new java.awt.Font("Lucida Sans", 3, 11)); // NOI18N
        contacli.setForeground(new java.awt.Color(0, 102, 102));
        contacli.setText("....");

        txtPedidos.setEditable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(null);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/Save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel4.add(btnSalvar);
        btnSalvar.setBounds(200, 10, 170, 30);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/Abort.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel4.add(btnCancelar);
        btnCancelar.setBounds(370, 10, 100, 27);

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/Modify.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });
        jPanel4.add(btAlterar);
        btAlterar.setBounds(100, 10, 100, 27);

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/Add.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jPanel4.add(btNovo);
        btNovo.setBounds(20, 10, 80, 27);

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/Delete.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        jPanel4.add(btExcluir);
        btExcluir.setBounds(470, 10, 90, 27);

        lbData.setText(".........................................................................................................................");
        jPanel4.add(lbData);
        lbData.setBounds(40, 40, 490, 14);

        jLabel6.setText("Entrega");

        txtEntrega.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome)
                            .addComponent(txtFavorito)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEndereco))
                            .addComponent(txtPedidos)
                            .addComponent(txtEntrega))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdprodutos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(contaveiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(contacli, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdprodutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtFavorito, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contaveiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contacli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );

        cbPedidos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPedidos.setSelectedIndex(-1);
        cbPedidos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPedidosItemStateChanged(evt);
            }
        });
        cbPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbPedidosMouseClicked(evt);
            }
        });
        cbPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPedidosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btPesquisa))
                    .addComponent(jLabel7)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void MyWindow(){  //metodo que chama atraves de um botao
          getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("ENTER"), "fireDoFindNext");
          getRootPane().getActionMap().put("fireDoFindNext", new AbstractAction("fireDoFindNext") {  
                // The next two lines should be in one line  
            @Override
                public void actionPerformed(ActionEvent evt) {  
                    //System.out.println("F8"); //faz uma acao
                    //CapturaFoto d = new CapturaFoto();//cria objeto e armazena na variavel d.show
                    //d.show();
                    //listarDocs();
                //if(txtConsultaDoc.getText().trim().equals("")){//se esse campo for vazio
                if(txtPesquisa.getText().trim().equals("")){//se esse campo for vazio
                   // getRootPane().setDefaultButton(btPesquisa);  //marca o botao para ser clicado
                    JOptionPane.showMessageDialog(null, "Nada a Pesquisar, digite um nome cadastrado");
                    //onClickLocaliza();//da baixa no cartao
                    //txtConsultaNome.requestFocus();
                    txtPesquisa.requestFocus();
                    //clearFields();
                    //DesabilitarCampos();//para iniciar um novo cadastro
                }else{
                     //onClickLocalizardoc();
                     onClickLocaliza();//localiza hostrico de pedidos
                    // onClickLocalizaPedidoEntrega();//localiza hostrico de pedidos
                     //TxtDestino.setText("");//limpa o campo destino pq tem varios pessoas para varios destinos
                }
                   
                    //JOptionPane.showMessageDialog(TesteSwing.this, _msg);
                    //Comecacombo();
                }  
            }  
        );  
    }  
     
    private void AtualizaClientes(){
        
       cbPedidos.removeAllItems();
          for (int i = 0; i < cliente.size(); i++){
            cbPedidos.addItem(cliente.get(i).getNome_vigi());
            String conta = String.valueOf("Total de "+ cliente.size()+"  "+"Clientes cadastrados");//conta quantidade de servidores no banco
            contacli.setText(conta);
        }
    }
    private void ControleDigitacao(){
        txtPedidos.setDocument(new TeclasPermitidasnome());
        //txtDoc.setDocument(new TeclasPermitidas());
        txtEntrega.setDocument(new TeclasPermitidas());
        txtTelefone.setDocument(new TeclasPermitidas());
        txtNome.setDocument(new TeclasPermitidasnome());
       // jTid.setEnabled(false);
       // txtConsultaNome.setVisible(true);
      //  jTidcad.setEnabled(false);
      //  TxtCondicao.setEnabled(false);
        btnSalvar.setEnabled(false);
        //grava.setVisible(false);
        //gravacesso.setVisible(false);
    }
    protected void alteraCliente(){
        
      if (verificarCampos()){
          //try{
            CliControl c = new CliControl();//importa o objeto uqe controla
            CliBean vgt = new CliBean();
             vgt.setNome_vigi(txtNome.getText().trim());
             vgt.setTelefone_vigi(txtTelefone.getText().trim());
             vgt.setPosto_vigi(txtEndereco.getText().trim());//
             vgt.setAtualiza(txtPedidos.getText().trim());
             vgt.setTurno_vigi(txtFavorito.getText().trim());
             vgt.setId_vigilancia(Integer.parseInt(jId.getText().trim()));
             vgt.setEntrega(Double.parseDouble(txtEntrega.getText().trim()));
            //servidor.setEmpresas_id_empresas(Integer.parseInt(txtIdprodutos.getText().trim()));
            //servidor.setEmpresas_id_empresas(produtos.get(cbPedidos.getSelectedIndex()).getEmpresas_id_empresas());
            //vgt.setId_vigilancia(produtos.get(cbClientes.getSelectedIndex()).getId_vigilancia());
            //servidor.setObs_vigi(txtObs.getText().trim());
            c.alterarClientes(vgt);
            desabilitarCampos();
            //JOptionPane.showMessageDialog(null, "ALTERADO COM SUCESSO vvvvvvv!");
            //dispose();
            listarClientes();
          // }catch(SQLException e){
            //e.printStackTrace();
            //e.printStackTrace();
            //JOptionPane.showMessageDialog(null, "NADAAA FOI ALTERADO!" + e);
        //}
      }
    
    }
    
    
    
    
    public void onClickLocalizar() {//pesquisa combobox
        ContatoController cc = new ContatoController();
        //if (verificarCartao()){
        
        try {
            //"%" + tfPesquisaCliente.getText().trim()+ "%"
            //Contato c = cc.buscaContatoPorNome(txtPesquisa.getText());//verifica nome
            //Contato c = cc.buscaContatoPorNome("%" + txtPesquisa.getText().trim()+ "%");//verifica 
            Contato c = cc.buscaContatoPorNome("%" + cbPedidos.getSelectedItem().toString()+ "%");//verifica 
            //Contato c = cc.buscaContatoPorAcess(tfDataSaida.getText());
            jId.setText(String.valueOf(c.getIdindex()));
            txtNome.setText(c.getNome());
            txtPedidos.setText(c.getCondicao());//favoritos
            txtEndereco.setText(c.getFunc());
            txtFavorito.setText(c.getDocumento());
            txtData.setText(c.getEntrada());
            //txtData.setText(c.getEntrada());
            txtTelefone.setText(c.getTelefone());
            txtEntrega.setText(c.getSaida());
            //txtTelefone.setText(c.getTelefone_acess());
            //ccbFuncao.setSelectedItem(c.getCondicao().toString());
            //CBSETOR.setSelectedItem(c.getSetor().toString());
            //ccbEmpresas.setSelectedItem(c.getEmpresa().toString());
            //cbcargo.setSelectedItem(VGT.get(tb.getSelectedRow()).getCargo_vigi().toString());
            //tfDataSaida.setText(c.getSaida_acess());
            //lbAtualizado.setText(c.getSaida_acess());//atualizado
            //quefez.setText(c.getCartao_acess());//quem fez
            //jTFoto.setText(c.getFoto());
            //lbicon.setIcon (new ImageIcon("C:/WebCam/"+jTFoto.getText()));
            //txtPesquisa.setText(c.getNome());
            //tfDatahoje.setText(c.getEntrada());
            //tfDataAtual.setText(c.getSaida());
           // tfDataSaida.setText(c.getSaida_acess());
            //verificarCartao();
            
            //txtDtNascimento.setText(new SimpleDateFormat("dd/MM/yyyy").format(c.getDtNascimento()));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro, tente novamente!\n" + e.getLocalizedMessage());
        } catch (NullPointerException e){
            //JOptionPane.showMessageDialog(this, "Cartao não localizado ou não existe!\n" + e.getLocalizedMessage());
           // atualizaagora();
        }
     //}
   }
    public void onClickLocaliza() {
        ContatoController cc = new ContatoController();
        //if (verificarCartao()){
        
        try {
            //"%" + tfPesquisaCliente.getText().trim()+ "%"
            //Contato c = cc.buscaContatoPorNome(txtPesquisa.getText());//verifica nome
            Contato c = cc.buscaContatoPorNome("%" + txtPesquisa.getText().trim()+ "%");//verifica 
            //Contato c = cc.buscaContatoPorNome("%" + cbClientes.getSelectedItem().toString()+ "%");//verifica 
            //Contato c = cc.buscaContatoPorAcess(tfDataSaida.getText());
            jId.setText(String.valueOf(c.getIdindex()));
            //txtNome.setText(c.getNome_acess());
            //txtTelefone.setText(c.getTelefone_acess());
            txtNome.setText(c.getNome());
            txtFavorito.setText(c.getDocumento());//favoritos
            txtEndereco.setText(c.getFunc());
            //txtObs.setText(c.getObservacoes());
            txtData.setText(c.getEntrada());
            txtTelefone.setText(c.getTelefone());
            //txtPesquisa.setText(c.getTelefone());
           // tfDataSaida.setText(c.getSaida_acess());
            //verificarCartao();
            
            //txtDtNascimento.setText(new SimpleDateFormat("dd/MM/yyyy").format(c.getDtNascimento()));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao localizar historico, tente novamente!\n" + e.getLocalizedMessage());
        } catch (NullPointerException e){
            //JOptionPane.showMessageDialog(this, "Cartao não localizado ou não existe!\n" + e.getLocalizedMessage());
           // atualizaagora();
        }
     //}
   }
    public void onClickLocalizaPedido() {
        ContatoController cc = new ContatoController();
        //if (verificarCartao()){
        
        try {
            //"%" + tfPesquisaCliente.getText().trim()+ "%"
            //Contato c = cc.buscaContatoPorNome(txtPesquisa.getText());//verifica nome
            //Contato c = cc.buscaContatoPorNome("%" + txtPesquisa.getText().trim()+ "%");//verifica
            Contato c = cc.buscaContatoPorNome("%" + txtPesquisa.getText().trim()+ "%");//verifica 
           //--- Contato c = cc.buscaContatoPorDoc("%" + cbPedidos.getSelectedItem().toString()+ "%");//verifica 
            //Contato c = cc.buscaContatoPorAcess(tfDataSaida.getText());
            //--txtIdprodutos.setText(String.valueOf(c.getIdindex()));
            //--txtPedido.setText(c.getNome_acess());
            //--txtTelefone.setText(c.getTelefone());
            //txtNome.setText(c.getNome());
            //--txtFavorito.setText(c.getCondicao());//favoritos
            jId.setText(String.valueOf(c.getIdindex()));
            //txtNome.setText(c.getNome_acess());
            //txtTelefone.setText(c.getTelefone_acess());
            txtNome.setText(c.getNome());
            txtData.setText(c.getDtNascimento());
            txtTelefone.setText(c.getTelefone());
            //--txtPesquisa.setText(c.getNome());
            txtFavorito.setText(c.getDocumento());//favoritos
            txtEndereco.setText(c.getFunc());//rua
            txtEntrega.setText(c.getSaida());//entrega
            //tfDatahoje.setText(c.getEntrada());
            //tfDataAtual.setText(c.getSaida());
            //--txtData.setText(c.getEntrada());
            //ccbFuncao.setSelectedItem(c.getCondicao().toString());
            //CBSETOR.setSelectedItem(c.getSetor().toString());
            //ccbEmpresas.setSelectedItem(c.getEmpresa().toString());
            //cbcargo.setSelectedItem(VGT.get(tb.getSelectedRow()).getCargo_vigi().toString());
            //tfDataSaida.setText(c.getSaida_acess());
            //lbAtualizado.setText(c.getSaida_acess());//atualizado
            //quefez.setText(c.getCartao_acess());//quem fez
            //jTFoto.setText(c.getFoto());
            //lbicon.setIcon (new ImageIcon("C:/WebCam/"+jTFoto.getText()));
            
            //txtEndereco.setText(c.getFunc());
            //txtObs.setText(c.getObservacoes());
            //txtData.setText(c.getEntrada());
            //txtTelefone.setText(c.getTelefone());
            //txtPesquisa.setText(c.getTelefone());
           // tfDataSaida.setText(c.getSaida_acess());
            //verificarCartao();
            
            //txtDtNascimento.setText(new SimpleDateFormat("dd/MM/yyyy").format(c.getDtNascimento()));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao localizar historico, tente novamente!\n" + e.getLocalizedMessage());
        } catch (NullPointerException e){
            //JOptionPane.showMessageDialog(this, "Cartao não localizado ou não existe!\n" + e.getLocalizedMessage());
           // atualizaagora();
        }
     //}
   }
    public void onClickLocalizaPedidoEntrega() {
        ContatoController cc = new ContatoController();
        //if (verificarCartao()){
        
        try {
            //"%" + tfPesquisaCliente.getText().trim()+ "%"
            //Contato c = cc.buscaContatoPorNome(txtPesquisa.getText());//verifica nome
            //Contato c = cc.buscaContatoPorNome("%" + txtPesquisa.getText().trim()+ "%");//verifica
            Contato c = cc.buscaContatoPorNome("%" + txtPesquisa.getText().trim()+ "%");//verifica 
           //--- Contato c = cc.buscaContatoPorDoc("%" + cbPedidos.getSelectedItem().toString()+ "%");//verifica 
            //Contato c = cc.buscaContatoPorAcess(tfDataSaida.getText());
            //--txtIdprodutos.setText(String.valueOf(c.getIdindex()));
            //--txtPedido.setText(c.getNome_acess());
            //--txtTelefone.setText(c.getTelefone());
            //txtNome.setText(c.getNome());
            //--txtFavorito.setText(c.getCondicao());//favoritos
            jId.setText(String.valueOf(c.getIdindex()));
            //txtNome.setText(c.getNome_acess());
            //txtTelefone.setText(c.getTelefone_acess());
            txtNome.setText(c.getNome());
            //txtData.setText(c.getDtNascimento());
            //txtTelefone.setText(c.getTelefone());
            //--txtPesquisa.setText(c.getNome());
            //txtFavorito.setText(c.getDocumento());//favoritos
           // txtEndereco.setText(c.getFunc());//rua
            txtEntrega.setText(c.getCondicao());//ENTREGA
            //txtObs.setText(c.getObservacoes());
            //tfDatahoje.setText(c.getEntrada());
            //tfDataAtual.setText(c.getSaida());
            //--txtData.setText(c.getEntrada());
            //ccbFuncao.setSelectedItem(c.getCondicao().toString());
            //CBSETOR.setSelectedItem(c.getSetor().toString());
            //ccbEmpresas.setSelectedItem(c.getEmpresa().toString());
            //cbcargo.setSelectedItem(VGT.get(tb.getSelectedRow()).getCargo_vigi().toString());
            //tfDataSaida.setText(c.getSaida_acess());
            //lbAtualizado.setText(c.getSaida_acess());//atualizado
            //quefez.setText(c.getCartao_acess());//quem fez
            //jTFoto.setText(c.getFoto());
            //lbicon.setIcon (new ImageIcon("C:/WebCam/"+jTFoto.getText()));
            
            //txtEndereco.setText(c.getFunc());
            //txtObs.setText(c.getObservacoes());
            //txtData.setText(c.getEntrada());
            //txtTelefone.setText(c.getTelefone());
            //txtPesquisa.setText(c.getTelefone());
           // tfDataSaida.setText(c.getSaida_acess());
            //verificarCartao();
            
            //txtDtNascimento.setText(new SimpleDateFormat("dd/MM/yyyy").format(c.getDtNascimento()));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao localizar historico, tente novamente!\n" + e.getLocalizedMessage());
        } catch (NullPointerException e){
            //JOptionPane.showMessageDialog(this, "Cartao não localizado ou não existe!\n" + e.getLocalizedMessage());
           // atualizaagora();
        }
     //}
   }
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        switch (tipoCadastro) {
            case "novo":
                cadastraCliente();//chama o metodo que cadastra
                
                //funcoesof();
                //listarClientes();
                //Icon imgicon = new ImageIcon("c:/fotos/gif/ok.gif");
                //btSalvar.setIcon(imgicon);
                break;
            case "alteracao":
                alteraCliente();
                //alteraCliente();
                //funcoesof();
                //listarClientes();//lista no loop os clientes desse metodo
                //Icon imgicon = new ImageIcon("c:/fotos/gif/ok.gif");
                //btSalvar.setIcon(imgicon);
                break;
        }
}//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        desabilitarCampos();
}//GEN-LAST:event_btnCancelarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        tipoCadastro = "alteracao";
        //tipoCadastro = "alteracao";
        //funcoeson();
        //alteraCliente();
        
        AlteraCliente();
        
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        tipoCadastro = "novo";
        //jTFoto.setText("semfoto.jpg"); //cada vez que clicar no botao novo pega a foto original sem
        //        atual();
         
         novoCliente();
        //  LimpaCriterios();
        //  //funcoeson();
        //visibilidadeon();
        //Icon imgicon = new ImageIcon("c:/fotos/gif/emo.gif");
        // btNovo.setIcon(imgicon);
        // btNovo.setSize(10,20);
}//GEN-LAST:event_btNovoActionPerformed

    private void Mostrabotao() {

        //objeto que vai armazenar a variavel digitada
        JPasswordField jpassword = new JPasswordField();
            //jpassword.requestFocusInWindow();
             //jpassword.setText("rox");
             jpassword.requestFocus();
        
        if (JOptionPane.showConfirmDialog(null, jpassword, "Entre com a senha", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            //System.out.println (new String(jpassword.getPassword()));
            //pega o texto digitado
            if (jpassword.getText().equals("burger") || jpassword.getText().equals("1313")) {
                //if (lbUsuarios.getText().equals("Andre Gouveia")|| lbUsuarios.getText().equals("Tony")){
                //System.exit(0);
                JPasswordField.setDefaultLocale(Locale.UK);
                //
                //JOptionPane.showMessageDialog(null,"Seja bem vindo! Lembre-se Padronize os SETORES!");
                //mostrarSetor();
                excluirCliente();
            } else {
                //mostrarVeiculos();
                //Veiculos.tfatualizacao.setText(lbUsuarios.getText());//gravando no label lbatualizacao
                JOptionPane.showMessageDialog(null, "DEIXA PRA LÁ, TCHAU");
                //dispose();
                //pega o texto gravado em lbUsuarios e seta no campo tfatualizacao
            }

        }

    }
    private void carregarClientes() {
        
    }
     private void Rezise(){
        tbServidoresVeiculos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);  
        tbServidoresVeiculos.getColumnModel().getColumn(0).setPreferredWidth(3);//id
        tbServidoresVeiculos.getColumnModel().getColumn(1).setPreferredWidth(175); //nome
        tbServidoresVeiculos.getColumnModel().getColumn(2).setPreferredWidth(189);//endereco
        tbServidoresVeiculos.getColumnModel().getColumn(3).setPreferredWidth(159);//data
        tbServidoresVeiculos.getColumnModel().getColumn(4).setPreferredWidth(175);//obs
        tbServidoresVeiculos.getColumnModel().getColumn(5).setPreferredWidth(15);//outro
       
    }
    
    private void excluirCliente() {
        if (tbServidoresVeiculos.getSelectedRow() != -1) {
            int resposta = JOptionPane.showConfirmDialog(this, "Excluir Cliente Selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                CliControl pc = new CliControl();
                pc.excluirCliente(pedido.get(tbServidoresVeiculos.getSelectedRow()).getId_vigilancia());
                //AtualizaClientes();
                listarClientes();
            }
        }
    }
    
    
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        Mostrabotao();
}//GEN-LAST:event_btExcluirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       MyWindow();
    }//GEN-LAST:event_formWindowOpened

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        
    }//GEN-LAST:event_txtNomeFocusGained

    private void cbPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbPedidosMouseClicked
        pedido = new CliControl().listarPedidos("%%");
        cbPedidos.removeAllItems();
        listarClientes();
          for (int i = 0; i < pedido.size(); i++){
            cbPedidos.addItem(pedido.get(i).getNome_vigi());
            //cbPedidos.addItem(pedido.get(i).getTelefone_vigi());
            //String conta = String.valueOf("Total de "+ cliente.size()+"  "+"Clientes cadastrados");//conta quantidade de servidores no banco
            //contacli.setText(conta
            
        }
    }//GEN-LAST:event_cbPedidosMouseClicked

    private void cbPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPedidosActionPerformed
          onClickLocalizar();
        //--String fav = (String)cbPedidos.getSelectedItem();
        //--txtFavorito.setText(fav);
        
    }//GEN-LAST:event_cbPedidosActionPerformed

    private void cbPedidosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPedidosItemStateChanged
        onClickLocalizaPedido();
    }//GEN-LAST:event_cbPedidosItemStateChanged

    private void txtFavoritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFavoritoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFavoritoActionPerformed

    private void btPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaActionPerformed
        // TODO add your handling code here:
        //tipoPesquisa = "Matricula";
        //listarClientes();//pesquisa por nome
        listarClientesTelefone();//pesquisa por telefone
    }//GEN-LAST:event_btPesquisaActionPerformed

    public void UpperCase() {
//String str = "Todos os caracteres mai�sculos menor neste string ser� convertido para letras mai�sculas";
        String str = txtNome.getText();
          txtNome.setText(str.toUpperCase ());
//nomecracha.setText(str.toUpperCase ());
//nomecracha.setText(str.toUpperCase ());
//str = str.toUpperCase ();

//System.out.println (str);
}
    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
        UpperCase();
    }//GEN-LAST:event_txtNomeFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btPesquisa;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbPedidos;
    private javax.swing.JLabel contacli;
    private javax.swing.JLabel contaveiculos;
    private javax.swing.JTextField jId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbData;
    protected javax.swing.JTable tbServidoresVeiculos;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtEntrega;
    private javax.swing.JTextField txtFavorito;
    private javax.swing.JTextField txtIdprodutos;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPedidos;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void desabilitarCampos() {
        txtNome.setEditable(false);//limpa a o campo
        txtEndereco.setEditable(false);
        txtFavorito.setEditable(false);
        txtPedidos.setEditable(false);
        txtTelefone.setEditable(false);
    }

    private boolean verificarCampos() {
        if (txtNome.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"O campo nome é de preenchimento obrigatório!","Mensagem do Sistema",JOptionPane.INFORMATION_MESSAGE);
            txtNome.requestFocus();
            return false;
        }
        //if (!tfUf.getText().trim().equals("")){//matricula usava esse antees
        if (txtTelefone.getText().trim().equals("")){//matricula
            JOptionPane.showMessageDialog(this,"O campo Telefone também é Obrigatório!","Mensagem do Sistema",JOptionPane.INFORMATION_MESSAGE);
            txtTelefone.requestFocus();//faz esse campo fique com o cursor nele
            return false;
        }
       if (txtEndereco.getText().trim().equals("")){//foto
            JOptionPane.showMessageDialog(this,"O campo Endereco também é obrigatório!","Mensagem do Sistema",JOptionPane.INFORMATION_MESSAGE);
            txtEndereco.requestFocus();//faz esse campo fique com o cursor nele
            return false;

        }
        
        if (txtTelefone.getText().trim().equals("")){//nome do cracha
            JOptionPane.showMessageDialog(this,"O campo Telefone tambem é obrigatório!","Mensagem do Sistema",JOptionPane.INFORMATION_MESSAGE);
           txtTelefone.requestFocus();//faz esse campo fique com o cursor nele
           return false;
          }
         if (txtEntrega.getText().trim().equals("")){//vazio a entrega
            JOptionPane.showMessageDialog(this,"A TAXA de entrega é obrigatório!","Mensagem do Sistema",JOptionPane.INFORMATION_MESSAGE);
               txtEntrega.requestFocus();//faz esse campo fique com o cursor nele
           return false;
          }
        
            return true;
    }
   private void atualizaagora(){
    String FormatData = new SimpleDateFormat("dd/MM/yyyy").format(new Date(System.currentTimeMillis()));
    //tfDatahoje.setText(FormatData);//passa por parametro a data atual
    //tfDataAtual.setText(FormatData);
    txtData.setText(FormatData);
}
   protected void listarClientesTelefone() {
        CliControl cli = new CliControl();
        //--usado antespedido = cli.listarCliente("%" + txtPesquisa.getText().trim() + "%");//tfPesquisaCliente
        pedido = cli.listarPedidos("%" + txtPesquisa.getText().trim() + "%");
        //listarPedidos
        mostrarVeiculos(pedido);
    }
   protected void listarClientes() {
        CliControl cli = new CliControl();
        //--usado antespedido = cli.listarCliente("%" + txtPesquisa.getText().trim() + "%");//tfPesquisaCliente
        pedido = cli.listarCliente("%" + txtPesquisa.getText().trim() + "%");
        //listarPedidos
        mostrarVeiculos(pedido);
    }
    protected void mostrarVeiculos(List<CliBean> veiculos) {
        while (tmServidores.getRowCount() > 0) {
               tmServidores.removeRow(0);
        }
        //if (clientes.size() == 0)usava esse antes
        if (veiculos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum Cliente encontrado!");
            txtPesquisa.setText("");//limpa o campo
        } else {
            //array que armazena as informa�oes no la�o
            String[] campos = new String[]{null, null, null, null, null};
            for (int i = 0; i < veiculos.size(); i++) {
                String conta = String.valueOf(veiculos.size() + "  " + "ClientesCadastrados");//conta quantidade de servidores no banco
                contaveiculos.setText(conta);//passa por parametro dentro da label quantos tem no banco
                tmServidores.addRow(campos);
                tmServidores.setValueAt(veiculos.get(i).getId_vigilancia(), i, 0);//indice zero da matriz vector
                tmServidores.setValueAt(veiculos.get(i).getNome_vigi(), i, 1); //anteriormente era 1
                tmServidores.setValueAt(veiculos.get(i).getTelefone_vigi(), i, 2);//anteriormente era 2
                tmServidores.setValueAt(veiculos.get(i).getPosto_vigi(), i, 3);//puxou complemento, pedido favorito
                tmServidores.setValueAt(veiculos.get(i).getDatain_vigi(), i, 4);
                //tmServidores.setValueAt(veiculos.get(i).getTurno_vigi(), i, 5);
                
            }
        }
    }
   protected void tbClientesLinhaSelecionada(JTable tb) {
        //(tb.getSelectedRow() != -1) USAVA ASSIM ANTES

        if (tb.getSelectedRow() != -1) {//QUANDO CLICA NA LINHA APARECE NOS CAMPOS OS NOMES
            jId.setText(String.valueOf(pedido.get(tb.getSelectedRow()).getId_vigilancia()));//parse int nao precisa mostra ess id pq autoincrement
            txtNome.setText(pedido.get(tb.getSelectedRow()).getNome_vigi());
            txtTelefone.setText(String.valueOf(pedido.get(tb.getSelectedRow()).getTelefone_vigi()));
           // txtEndereco.setText(pedido.get(tb.getSelectedRow()).getCargo_vigi());
            txtEndereco.setText(pedido.get(tb.getSelectedRow()).getPosto_vigi());
            txtPedidos.setText(pedido.get(tb.getSelectedRow()).getAtualiza());
            txtFavorito.setText(pedido.get(tb.getSelectedRow()).getTurno_vigi());//favorito pedido
            txtData.setText(pedido.get(tb.getSelectedRow()).getDatain_vigi());
            txtEntrega.setText(String.valueOf(pedido.get(tb.getSelectedRow()).getEntrega()));
            //cbServidores.setSelectedItem(veiculos.get(tb.getSelectedRow()).getServidor_foto());
            //jAdesivo.setText(String.valueOf(veiculos.get(tb.getSelectedRow()).getAdesivo()));
           // jAdesivos.setText(String.valueOf(veiculos.get(tb.getSelectedRow()).getAdesivos()));
           // jAdesivoss.setText(String.valueOf(veiculos.get(tb.getSelectedRow()).getAdesivoss()));
            //cbFornecedores.setText(servidores.get(tb.getSelectedRow()).getSetor_nome_setor());
           // Cbmenosum.setSelectedItem(veiculos.get(tb.getSelectedRow()).getEstaciona());
           // cbGaragem.setSelectedItem(veiculos.get(tb.getSelectedRow()).getGaragem());
            //txtmatricula.setText(String.valueOf(veiculos.get(tb.getSelectedRow()).getServidor_matricula()));
          //  lbatualizacao.setText(veiculos.get(tb.getSelectedRow()).getDentifica());
           // txtDescricao.setText(veiculos.get(tb.getSelectedRow()).getObservacao());
           // txtLocalizacao.setText(veiculos.get(tb.getSelectedRow()).getEstaciona());
           // txtGaragem.setText(veiculos.get(tb.getSelectedRow()).getGaragem());
          //  tbData.setText(veiculos.get(tb.getSelectedRow()).getCadastra());
            // piscalabel.setVisible(false);
           

            //tfTelefone.setText(servidores.get(tb.getSelectedRow()).getTelefone());
            //tfCelular.setText(servidores.get(tb.getSelectedRow()).getCelular());
            //tfDatahoje.setText(servidores.get(tb.getSelectedRow()).getDatahoje());
           // verificaperiodo.setText(veiculos.get(tb.getSelectedRow()).getPeriodo());
            //ComparaData.setText(veiculos.get(tb.getSelectedRow()).getComparadata());
            //jTFoto.setText(String.valueOf(veiculos.get(tb.getSelectedRow()).getServidor_foto()));
            //nomecracha.setText(servidores.get(tb.getSelectedRow()).getCracha());
            //lbfoto.setIcon(new ImageIcon("R:/fotos/"+ jTFoto.getText()));
            

        } else {
            // timerStop();

            //piscalabel.setVisible(false);
            txtPesquisa.setText("");
            //txtNome1.setText("");
           // txtNome2.setText("");
           // /txtNome3.setText("");
          // / txtDescricao.setText("");
           // jAdesivo.setText("");
           // jAdesivos.setText("");
          //  jAdesivoss.setText("");
            // jID.setText("");
            // tbData.setText("");
           // placa1.setText("");
           // placa2.setText("");
           // placa3.setText("");
           // txtGaragem.setText("");
           // txtLocalizacao.setText("");
        }
    }
    private void cadastraCliente() {
        if (verificarCampos()){
            CliControl c = new CliControl();//importa o objeto uqe controla
            CliBean servidor = new CliBean();//objeto que instancia a classe ServidorBean para dentro de cliente
            servidor.setNome_vigi(txtNome.getText().trim());
            servidor.setTelefone_vigi(txtTelefone.getText().trim());
            servidor.setPosto_vigi(txtEndereco.getText().trim());//
            servidor.setTurno_vigi(txtPedidos.getText().trim());//rua
            servidor.setAtualiza(txtFavorito.getText().trim());//rua
            servidor.setDatain_vigi(txtData.getText().trim());
            servidor.setEntrega(Double.parseDouble(txtEntrega.getText().trim()));
            //servidor.setEmpresas_id_empresas(Integer.parseInt(txtIdprodutos.getText().trim()));
            //servidor.setEmpresas_id_empresas(produtos.get(cbPedidos.getSelectedIndex()).getEmpresas_id_empresas());
             //servidor.setMatricula(Integer.parseInt(tfMatricula.getText().trim()));
            //servidor.setObs_vigi(txtObs.getText().trim());
            c.cadastrarCliente(servidor);
            desabilitarCampos();
            listarClientes();
        }else{
            habilitarCampos();
            btAlterar.setEnabled(false);
           
            
        }
        
        
    }
    private void onClickSalvar() throws ParseException {
        ContatoController cc = new ContatoController();
        try {
            cc.salvar(txtNome.getText(), txtTelefone.getText(), txtEndereco.getText(), txtPedidos.getText(), txtFavorito.getText(), txtIdprodutos.getText(), txtData.getText());
            JOptionPane.showMessageDialog(this, "Contato salvo com sucesso!");
            clearFields();
            //contatoList = new ContatoController().listaContatos();
            }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Nao foi possivel salvar contato!\n" + e.getLocalizedMessage());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Data possui formato inválido!\n" + e.getLocalizedMessage());
        }
    }

    private void AlteraCliente(){
        
        habilitarCampos();
        btnSalvar.setEnabled(true);
        //txtNome.setText("");//limpa a o campo
        //txtEndereco.setText("");
        //txtFavorito.setText("");
        //txtObs.setText("");
        //txtTelefone.setText("");
        //txtPesquisa.setText("");
        atualizaagora();
    }
    
    private void novoCliente() {
        habilitarCampos();
        txtNome.requestFocus();
        btnSalvar.setEnabled(true);
        txtNome.setText("");//limpa a o campo
        txtEndereco.setText("");
        txtFavorito.setText("");
        txtPedidos.setText("");
        txtTelefone.setText("");
        txtPesquisa.setText("");
        txtEntrega.setText("");
        atualizaagora();
        
    }

    private void habilitarCampos() {
        txtNome.setEditable(true);//limpa a o campo
        txtEndereco.setEditable(true);
        txtFavorito.setEditable(true);
        txtPedidos.setEditable(true);
        txtTelefone.setEditable(true);
        txtEntrega.setEditable(true);
    }

    private void clearFields() {
        txtNome.setText("");//limpa a o campo
        txtEndereco.setText("");
        txtFavorito.setText("");
        txtPedidos.setText("");
        txtTelefone.setText("");
        txtPesquisa.setText("");
        txtEntrega.setText("");
    }
    
}
